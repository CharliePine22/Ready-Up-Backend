const express = require('express');
const router = express.Router();
const fetch = require('cross-fetch');

router.post('/generate_token', async (req, res) => {
  const clientSecret = process.env.TWITCH_CLIENT_SECRET;
  const clientId = process.env.TWITCH_CLIENT_ID;
  try {
    const tokenRequest = await fetch(
      'https://id.twitch.tv/oauth2/token?' +
        new URLSearchParams({
          grant_type: 'client_credentials',
          client_id: clientId,
          client_secret: clientSecret,
        }).toString(),
      {
        method: 'POST',
      }
    );
    const tokenStatus = await tokenRequest.json();
    res.send(tokenStatus);
  } catch (error) {
    res.send(error);
  }
});

// Look up game and grab cover to add to group list
router.post('/get_game_cover', async (req, res) => {
  const token = req.body.token;
  const gameName = req.body.gameName;
  const headers = {
    'Client-ID': '6f6lb21y9766gzprefym4vq4elgsib',
    Authorization: `Bearer ${token}`,
  };

  const url = `https://api.igdb.com/v4/games`;
  try {
    const request = await fetch(url, {
      method: 'POST',
      headers: headers,
      body: `fields *, artworks.*, alternative_names.*, cover.*, game_modes.*, genres.*, multiplayer_modes.*, websites.*; sort rating desc; where (name ~ *"${gameName}"* | alternative_names.name ~ *"${gameName}"*) & rating_count > 0 & cover != null & rating != null & category = (0); limit 10;`,
    });
    // & category != (1,3,34)
    const result = await request.json();
    res.send(result);
  } catch (error) {
    console.log(error);
    res.send(error);
  }
});

module.exports = router;
